{
    "ConnectionStrings": {
        "ConfigurationDbConnection": "Server=20.52.129.67;Port=5432;Database=IdentityServer4Admin;User Id=postgres;Password=Welcome123$!;",
        "PersistedGrantDbConnection": "Server=20.52.129.67;Port=5432;Database=IdentityServer4Admin;User Id=postgres;Password=Welcome123$!;",
        "IdentityDbConnection": "Server=20.52.129.67;Port=5432;Database=IdentityServer4Admin;User Id=postgres;Password=Welcome123$!;",
        "AdminLogDbConnection": "Server=20.52.129.67;Port=5432;Database=IdentityServer4Admin;User Id=postgres;Password=Welcome123$!;",
        "AdminAuditLogDbConnection": "Server=20.52.129.67;Port=5432;Database=IdentityServer4Admin;User Id=postgres;Password=Welcome123$!;",
        "DataProtectionDbConnection": "Server=20.52.129.67;Port=5432;Database=IdentityServer4Admin;User Id=postgres;Password=Welcome123$!;"
    },
  "AdminApiConfiguration": {
    "ApiName": "Avalon Api",
    "ApiVersion": "v1",
    "ApiBaseUrl": "http://20.52.129.67:8002",
    "IdentityServerBaseUrl": "http://20.52.129.67:8001",
    "OidcSwaggerUIClientId": "AdminClientId_api_swaggerui",
    "OidcApiName": "AdminClientId_api",
    "AdministrationRole": "Admin",
    "RequireHttpsMetadata": false,
    "CorsAllowAnyOrigin": true,
    "CorsAllowOrigins": []
  },
    "SmtpConfiguration": {
        "Host": "",
        "Login": "",
        "Password": ""
    },
    "SendGridConfiguration": {
        "ApiKey": "",
        "SourceEmail": "",
        "SourceName": ""
    },
    "DatabaseProviderConfiguration": {
        "ProviderType": "SqlServer"
    },
    "AuditLoggingConfiguration": {
        "Source": "IdentityServer.Admin.Api",
        "SubjectIdentifierClaim": "sub",
        "SubjectNameClaim": "name",
        "ClientIdClaim": "client_id"
    },
    "IdentityOptions": {
        "Password": {
            "RequiredLength": 8
        },
        "User": {
            "RequireUniqueEmail": true
        },
        "SignIn": {
            "RequireConfirmedAccount": false
        }
    },
    "DataProtectionConfiguration": {
        "ProtectKeysWithAzureKeyVault": false
    },
    "AzureKeyVaultConfiguration": {
        "AzureKeyVaultEndpoint": "",
        "ClientId": "",
        "ClientSecret": "",
        "UseClientCredentials": true,
        "DataProtectionKeyIdentifier": "",
        "ReadConfigurationFromKeyVault": false
    }
}